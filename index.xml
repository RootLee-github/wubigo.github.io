<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>为人民服务 on 为人民服务</title>
    <link>https://wubigo.com/</link>
    <description>Recent content in 为人民服务 on 为人民服务</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Mar 2019 14:49:10 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>K8s Pod Command Override</title>
      <link>https://wubigo.com/post/k8s-pod-command-override/</link>
      <pubDate>Mon, 18 Mar 2019 14:49:10 +0800</pubDate>
      
      <guid>https://wubigo.com/post/k8s-pod-command-override/</guid>
      <description>

&lt;p&gt;K8S POD Command Override OCR&lt;/p&gt;

&lt;h1 id=&#34;docker-entrypoint-vs-k8s-command&#34;&gt;docker Entrypoint vs k8s command&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;docker&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;k8s&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;entry&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ENTRYPOINT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;command&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;arguments&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CMD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;args&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;k8s command and args override the default OCR Entrypoint and Cmd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM alpine:3.8
RUN apk add --no-cache curl ethtool &amp;amp;&amp;amp; rm -rf /var/cache/apk/*
CMD [&amp;quot;--version&amp;quot;]
ENTRYPOINT [&amp;quot;curl&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;cmd-override-pod.yaml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Pod
metadata:
  name: command-override
  labels:
    purpose: override-command
spec:
  containers:
  - name: command-override-container
    image: bigo/curl:v1
    command: [&amp;quot;curl&amp;quot;]
    args: [&amp;quot;--help&amp;quot;]
  restartPolicy: Never
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;docker run -it bigo/curl:v1
curl 7.61.1 (x86_64-alpine-linux-musl) libcurl/7.61.1 LibreSSL/2.0.0 zlib/1.2.11 libssh2/1.8.0 nghttp2/1.32.0
Release-Date: 2018-09-05
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f cmd-override-pod.yaml
kubectl logs command-override

Usage: curl [options...] &amp;lt;url&amp;gt;
     --abstract-unix-socket &amp;lt;path&amp;gt; Connect via abstract Unix domain socket
     --anyauth       Pick any authentication method
 -a, --append        Append to target file when uploading

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>K8s Logging</title>
      <link>https://wubigo.com/post/k8s-logging/</link>
      <pubDate>Sun, 17 Mar 2019 10:25:07 +0800</pubDate>
      
      <guid>https://wubigo.com/post/k8s-logging/</guid>
      <description>

&lt;h1 id=&#34;node-level-logging&#34;&gt;Node-level Logging&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;System component logs&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;RUN IN CONTAINER(Y/N)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Systemd(W/WO)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;LOGGER LOCATION&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kubelet and container runtime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;W/O&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/var/log&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kubelet and container runtime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;W&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;journald&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;scheduler&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/var/log&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kube-proxy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/var/log&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;cluster-level-logging&#34;&gt;Cluster-level logging&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Use a node-level logging agent that runs on every node.&lt;/li&gt;
&lt;li&gt;Include a dedicated sidecar container for logging in an application pod.&lt;/li&gt;
&lt;li&gt;Push logs directly to a backend from within an application&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>K8S CORE DEVELOPMENT</title>
      <link>https://wubigo.com/post/k8s-core-development/</link>
      <pubDate>Mon, 04 Mar 2019 11:13:20 +0800</pubDate>
      
      <guid>https://wubigo.com/post/k8s-core-development/</guid>
      <description>&lt;pre&gt;&lt;code&gt;git clone git@github.com:wubigo/kubernetes.git
git remote add upstream https://github.com/kubernetes/kubernetes.git
git fetch --all
git checkout tags/v1.13.3 -b v1.13.3 
git branch -av|grep 1.13
* fix-1.13                            4807084f79 Add/Update CHANGELOG-1.13.md for v1.13.2.
  remotes/origin/release-1.13         4807084f79 Add/Update CHANGELOG-1.13.md for v1.13.2.

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>通过SDK操纵公有云</title>
      <link>https://wubigo.com/post/dev-on-tencent-cloud-sdk-in-go/</link>
      <pubDate>Sun, 03 Mar 2019 20:24:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/dev-on-tencent-cloud-sdk-in-go/</guid>
      <description>

&lt;p&gt;基于腾讯云Go SDK开发&lt;/p&gt;

&lt;h1 id=&#34;下载开发工具集&#34;&gt;下载开发工具集&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;go get -u github.com/tencentcloud/tencentcloud-sdk-go
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;为集群准备cvm&#34;&gt;为集群准备CVM&lt;/h1&gt;

&lt;p&gt;从本地开发集群K8S读取安全凭证secretId和secretKey配置信息，
然后把安全凭证传送给SDK客户端&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;secretId, secretKey:= K8SClient.Secrets(&amp;quot;namespace=tencent&amp;quot;).Get(&amp;quot;cloud-pass&amp;quot;)
credential := CloudCommon.NewCredential(&amp;quot;secretId&amp;quot;, &amp;quot;secretKey&amp;quot;)
client, _ := cvm.NewClient(credential, regions.Beijing)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;request := cvm.NewAllocateHostsRequest()
request.FromJsonString(K8SClient.Configs(&amp;quot;namespace=tencent&amp;quot;).Get(&amp;quot;K8S-TENCENT-PROD&amp;quot;))
response, err := client.AllocateHosts(request)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;通过ansible在cvm搭建k8s集群&#34;&gt;通过ANSIBLE在CVM搭建K8S集群&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;Ansible.Hosts().Get(response.ToJsonString())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;调用ANSIBLE开始在CVM部署K8S集群&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>无服务器计算环境OPENFAAS搭建</title>
      <link>https://wubigo.com/post/serverless-computing-why-how/</link>
      <pubDate>Sun, 03 Mar 2019 08:45:55 +0800</pubDate>
      
      <guid>https://wubigo.com/post/serverless-computing-why-how/</guid>
      <description>

&lt;h1 id=&#34;准备&#34;&gt;准备&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;创建角色和授权&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubectl create clusterrolebinding &amp;quot;cluster-admin-faas&amp;quot; \
  --clusterrole=cluster-admin \
  --user=&amp;quot;cluster-admin-faas&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;分别为FAAS核心服务和函数创建名字空间&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;创建凭证&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# generate a random password
PASSWORD=$(head -c 12 /dev/urandom | shasum| cut -d&#39; &#39; -f1)

kubectl -n openfaas create secret generic basic-auth \
--from-literal=basic-auth-user=admin \
--from-literal=basic-auth-password=&amp;quot;$PASSWORD&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;在本地helm仓库增加openfaas&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;helm repo add openfaas https://openfaas.github.io/faas-netes/
&amp;quot;openfaas&amp;quot; has been added to your repositories
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;开始安装&#34;&gt;开始安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;helm repo update \
 &amp;amp;&amp;amp; helm upgrade openfaas --install openfaas/openfaas \
    --namespace openfaas  \
    --set basic_auth=true \
    --set functionNamespace=openfaas-fn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认通过NodePorts方式访问openfaas控制台&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl -n openfaas get svc -o wide |grep external
gateway-external   NodePort    10.105.222.28    &amp;lt;none&amp;gt;        8080:31112/TCP   91m   app=gateway

export OPENFAAS_URL=http://&amp;lt;pod-node-ip&amp;gt;:31112
curl OPENFAAS_URL
USERNAME=$(kubectl get secrets basic-auth -n openfaas -o yaml | grep basic-auth-user)
PASSWD=$(kubectl get secrets basic-auth -n openfaas -o yaml | grep basic-auth-password)
PASSWD=$(echo &#39;$PASSWD&#39; | base64 --decode)

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;验证安装结果&#34;&gt;验证安装结果&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;通过浏览器访问openfaas&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;curl http://&amp;lt;pod-node-ip&amp;gt;:31112
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入上面的用户名和密码进入openfaas控制台&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装openfaas客户端&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;curl -sSL https://cli.openfaas.com | sh
echo -n $PASSWORD | faas-cli login -g $OPENFAAS_URL -u admin --password-stdin
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;removing-the-openfaas&#34;&gt;Removing the OpenFaaS&lt;/h1&gt;

&lt;p&gt;All control plane components can be cleaned up with helm:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm delete --purge openfaas
kubectl delete namespace/openfaas
kubectl delete namespace/openfaas-fn
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>mozilla crowdsources the largest dataset of human voices</title>
      <link>https://wubigo.com/post/speech_recognition-transcribed-voice-dataset/</link>
      <pubDate>Fri, 01 Mar 2019 04:19:39 +0800</pubDate>
      
      <guid>https://wubigo.com/post/speech_recognition-transcribed-voice-dataset/</guid>
      <description>&lt;p&gt;转录语音数据集&lt;/p&gt;

&lt;p&gt;mozilla crowdsources the largest dataset of human voices available for use, including 18 different languages, adding up to almost 1,400 hours of recorded voice data from more than 42,000 contributors&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.mozilla.org/blog/2019/02/28/sharing-our-common-voices-mozilla-releases-the-largest-to-date-public-domain-transcribed-voice-dataset/&#34; target=&#34;_blank&#34;&gt;https://blog.mozilla.org/blog/2019/02/28/sharing-our-common-voices-mozilla-releases-the-largest-to-date-public-domain-transcribed-voice-dataset/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>K8S CNI操作指引</title>
      <link>https://wubigo.com/post/k8s-cni/</link>
      <pubDate>Sun, 24 Feb 2019 16:18:43 +0800</pubDate>
      
      <guid>https://wubigo.com/post/k8s-cni/</guid>
      <description>

&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;

&lt;p&gt;CNI是K8S的网络插件实现规范，与docker的CNM并不兼容，在K8S和docker的博弈过程中，
  K8S把docker作为默认的runtime并没有换来docker对K8S的支持。K8S决定支持CNI规范。
  许多网络厂商的产品都提供同时都支持CNM和CNI的产品。&lt;/p&gt;

&lt;p&gt;在容器网络环境，经常看到docker看不到K8S POD的IP网络配置，
  DOCKER容器有时候和POD无法通信。&lt;/p&gt;

&lt;p&gt;CNI相对CNM是一个轻量级的规范。网络配置是基于JSON格式，
  网络插件支持创建和删除指令。POD启动的时候发送创建指令。&lt;/p&gt;

&lt;p&gt;POD运行时首先为分配一个网络命名空间，并把该网络命名空间制定给容器ID，
  然后把CNI配置文件传送给CNI网络驱动。网络驱动连接容器到自己的网络，
  并把分配的IP地址通过JSON文件报告给POD运行时POD终止的时候发送删除指令。&lt;/p&gt;

&lt;p&gt;当前CNI指令负责处理IPAM, L2和L3, POD运行时处理端口映射(L4)&lt;/p&gt;

&lt;h1 id=&#34;k8s网络基础&#34;&gt;K8S网络基础&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/k8s-network-basic/&#34;&gt;K8S网络基础&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;cni插件&#34;&gt;CNI插件&lt;/h1&gt;

&lt;h1 id=&#34;cni实现方式&#34;&gt;CNI实现方式&lt;/h1&gt;

&lt;p&gt;CNI有很多实现，在这里之列举熟悉的几个实现。并提供详细的说明文档。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Flannel&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kube-router&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/k8s_cni_kube-router/&#34;&gt;Kube-router&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;OpenVSwitch&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Calico&lt;/p&gt;

&lt;p&gt;Calico可以以非封装或非覆盖方式部署以支持高性能，高扩展扩展性数据中心网络需求&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/k8s_cni_calico&#34;&gt;CNI-Calico&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Weave Net&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;网桥&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/cni_l2_network_on_bare_metal/&#34;&gt;CNI 网桥&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hpcloud</title>
      <link>https://wubigo.com/project/hpcloud/</link>
      <pubDate>Sat, 23 Feb 2019 16:45:49 +0800</pubDate>
      
      <guid>https://wubigo.com/project/hpcloud/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.hpe.com/us/en/solutions/cloud.html&#34; target=&#34;_blank&#34;&gt;hpcloud&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog on hugo way</title>
      <link>https://wubigo.com/post/blog_on_hugo/</link>
      <pubDate>Fri, 22 Feb 2019 11:38:27 +0800</pubDate>
      
      <guid>https://wubigo.com/post/blog_on_hugo/</guid>
      <description>

&lt;h1 id=&#34;setup-for-gitlab&#34;&gt;setup for gitlab&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;tee .gitlab-ci.yml &amp;lt;&amp;lt; EOF
image: monachus/hugo

variables:
  GIT_SUBMODULE_STRATEGY: recursive

pages:
  script:
  - hugo
  artifacts:
    paths:
    - public
  only:
  - master
EOF

git init
echo &amp;quot;/public&amp;quot; &amp;gt;&amp;gt; .gitignore  

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;post&#34;&gt;post&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;hugo new post/&lt;post_name&gt;/index.md&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;deploy&#34;&gt;deploy&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;hugo
publish the public to web server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;configuration-lookup-order&#34;&gt;Configuration Lookup Order&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;confit/_default/&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;./config.toml&lt;/li&gt;
&lt;li&gt;./config.yaml&lt;/li&gt;
&lt;li&gt;./config.json&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;confit/_default/config.toml&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hugo build destination&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;publishDir
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Number of items per page in paginated lists&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;paginate = 20  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;taxonomies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;by tag&lt;/li&gt;
&lt;li&gt;by author&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;tag = &amp;quot;tags&amp;quot;
author = &amp;quot;authors&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;confit/_default/menus.toml&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigation Links widget enable/disabl under &lt;code&gt;content/home/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Navigation Links widget display order&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config/_default/languages.toml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;多语言显示&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;languageCode = &amp;quot;en-us&amp;quot;
languageCode = &amp;quot;zh-Hans&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;blog-set&#34;&gt;Blog set&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;content/post/_index.md&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;post view as Card&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;view = 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;content/home/posts.md&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Number of recent posts to list.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;count = 20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/hugo-logo-wide.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kubeamd cheat sheet</title>
      <link>https://wubigo.com/post/kubeamd-cheat-sheet/</link>
      <pubDate>Mon, 11 Feb 2019 11:38:27 +0800</pubDate>
      
      <guid>https://wubigo.com/post/kubeamd-cheat-sheet/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;version notes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;some only works on 1.13&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm version: &amp;amp;version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;13&amp;quot;, GitVersion:&amp;quot;v1.13.3&amp;quot;,
GitCommit:&amp;quot;721bfa751924da8d1680787490c54b9179b1fed0&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2019-02-16T15:29:34Z&amp;quot;, 
GoVersion:&amp;quot;go1.11.5&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;linux/amd64&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Starting with Kubernetes 1.12, the K8S.gcr.io/kube-${ARCH}, K8S.gcr.io/etcd and K8S.gcr.io/pause images don’t require an -&lt;strong&gt;${ARCH}&lt;/strong&gt; suffix&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get all Pending pods&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --field-selector=status.phase=Pending
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;images list&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config images list -v 4
I0217 07:28:13.305268   14495 interface.go:384] Looking for default routes with IPv4 addresses
I0217 07:28:13.307275   14495 interface.go:389] Default route transits interface &amp;quot;enp0s3&amp;quot;
I0217 07:28:13.308349   14495 interface.go:196] Interface enp0s3 is up
I0217 07:28:13.309611   14495 interface.go:244] Interface &amp;quot;enp0s3&amp;quot; has 2 addresses :[192.168.1.9/24 fe80::a00:27ff:fe75:f493/64].
I0217 07:28:13.310328   14495 interface.go:211] Checking addr  192.168.1.9/24.
I0217 07:28:13.311219   14495 interface.go:218] IP found 192.168.1.9
I0217 07:28:13.311961   14495 interface.go:250] Found valid IPv4 address 192.168.1.9 for interface &amp;quot;enp0s3&amp;quot;.
I0217 07:28:13.312688   14495 interface.go:395] Found active IP 192.168.1.9 
I0217 07:28:13.313427   14495 version.go:163] fetching Kubernetes version from URL: https://dl.K8S.io/release/stable-1.txt
I0217 07:28:23.320683   14495 version.go:94] could not fetch a Kubernetes version from the internet: unable to get URL &amp;quot;https://dl.K8S.io/release/stable-1.txt&amp;quot;: Get https://storage.googleapis.com/kubernetes-release/release/stable-1.txt: net/http: request canceled (Client.Timeout exceeded while awaiting headers)
I0217 07:28:23.321520   14495 version.go:95] falling back to the local client version: v1.13.3
I0217 07:28:23.330622   14495 feature_gate.go:206] feature gates: &amp;amp;{map[]}
K8S.gcr.io/kube-apiserver:v1.13.3
K8S.gcr.io/kube-controller-manager:v1.13.3
K8S.gcr.io/kube-scheduler:v1.13.3
K8S.gcr.io/kube-proxy:v1.13.3
K8S.gcr.io/pause:3.1
K8S.gcr.io/etcd:3.2.24
K8S.gcr.io/coredns:1.2.6
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;pull images beforehand&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config images pull -v 4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;init-phase&#34;&gt;init phase&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config print init-defaults &amp;gt;adm.defaults.yaml
git diff adm.defaults.yaml
-imageRepository: K8S.gcr.io
+imageRepository: mirrorgooglecontainers
sudo kubeadm init phase preflight --config=./adm.defaults.yaml -v 4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;self-hosting-the-kubernetes-control-plane&#34;&gt;Self-hosting the Kubernetes control plane&lt;/h1&gt;

&lt;p&gt;As of 1.8, you can experimentally create a self-hosted Kubernetes control plane. This means that key components such as the API server, controller manager, and scheduler run as DaemonSet pods configured via the Kubernetes API instead of static pods configured in the kubelet via static files.
To create a self-hosted cluster, pass the flag &amp;ndash;feature-gates=SelfHosting=true to kubeadm init.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/setup-ha-etcd-with-kubeadm/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/setup-ha-etcd-with-kubeadm/&lt;/a&gt;
&lt;a href=&#34;https://discuss.kubernetes.io/t/question-about-etcd-cluster-with-kubeadm-in-1-11/1228&#34; target=&#34;_blank&#34;&gt;https://discuss.kubernetes.io/t/question-about-etcd-cluster-with-kubeadm-in-1-11/1228&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get configmaps --all-namespaces
kubectl describe configmaps kubeadm-config -n kube-system

kubectl -n kube-system get deployment coredns -o yaml | \
  sed &#39;s/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g&#39; | \
  kubectl apply -f -
  
kubectl scale --current-replicas=2 --replicas=1 deployments.apps/nginx1-14
kubectl logs calico-node-4mb5z -n kube-system
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HTTP/3</title>
      <link>https://wubigo.com/post/2019-02-01-http3notes/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2019-02-01-http3notes/</guid>
      <description>

&lt;h1 id=&#34;track-http-redirection&#34;&gt;track http redirection&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://wubigo.com/post&#34; target=&#34;_blank&#34;&gt;http://wubigo.com/post&lt;/a&gt;   -&amp;gt; &lt;a href=&#34;http://wubigo.com/post/&#34; target=&#34;_blank&#34;&gt;http://wubigo.com/post/&lt;/a&gt;  -&amp;gt; &lt;a href=&#34;https://wubigo.com/post/&#34; target=&#34;_blank&#34;&gt;https://wubigo.com/post/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;curl -IL &lt;a href=&#34;http://wubigo.com/post&#34; target=&#34;_blank&#34;&gt;http://wubigo.com/post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;HTTP/1.1 301 Moved Permanently
Location: https://wubigo.com/post
Via: 1.1 varnish
X-Cache: HIT
X-Cache-Hits: 1

HTTP/1.1 200 OK
Content-Length: 0

HTTP/1.1 301 Moved Permanently
Strict-Transport-Security: max-age=31556952
Location: http://wubigo.com/post/
Access-Control-Allow-Origin: *
X-Cache: HIT
X-Cache-Hits: 1


HTTP/1.1 301 Moved Permanently
Location: https://wubigo.com/post/
X-Cache: HIT
X-Cache-Hits: 1

HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Cache-Control: max-age=600
X-Cache: HIT
X-Cache-Hits: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;main-goal&#34;&gt;main goal&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP/2&amp;rsquo;s multiplexed connections, allowing multiple streams of data to reach all the endpoints independently. In contrast,
HTTP hosted on Transmission Control Protocol (TCP) can be blocked if any of the multiplexed data streams has an error.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reduced connection and transport latency, and bandwidth estimation in each direction to avoid congestion.
It also moves control of the congestion avoidance algorithms into the application space at both endpoints,
rather than the kernel space, which it is claimed will allow these algorithms to improve more rapidly.
Additionally, the protocol can be extended with forward error correction (FEC) to further improve performance
when errors are expected&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[1]. &lt;a href=&#34;https://box.matto.nl/revivegopher.html&#34; target=&#34;_blank&#34;&gt;revive Gopherspace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2]. &lt;a href=&#34;https://gopher.floodgap.com/&#34; target=&#34;_blank&#34;&gt;gopher client&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>微服务安全：认证，授权和审计(AAA)</title>
      <link>https://wubigo.com/post/microservice-security-aaa/</link>
      <pubDate>Sat, 01 Dec 2018 08:01:48 +0800</pubDate>
      
      <guid>https://wubigo.com/post/microservice-security-aaa/</guid>
      <description>

&lt;h1 id=&#34;微服务安全要点&#34;&gt;微服务安全要点&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;通信链路加密&lt;/li&gt;
&lt;li&gt;灵活的服务访问控制，包括细粒度访问策略&lt;/li&gt;
&lt;li&gt;访问日志审计&lt;/li&gt;
&lt;li&gt;服务提供方可替代性(batteries included)和可集成性&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;基本概念&#34;&gt;基本概念&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;安全标识&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在K8S，安全标识(service account)代表一个用户，一个服务或一组服务。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安全命名&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安全命名定义可运行服务的安全标识&lt;/p&gt;

&lt;h1 id=&#34;微服务认证&#34;&gt;微服务认证&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;传输层认证&lt;/li&gt;
&lt;li&gt;终端用户认证&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;每一个终端请求通过JWT(JSON Web Token)校验, 支持Auth0, Firebase。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://medium.facilelogin.com/securing-microservices-with-oauth-2-0-jwt-and-xacml-d03770a9a838&#34; target=&#34;_blank&#34;&gt;https://medium.facilelogin.com/securing-microservices-with-oauth-2-0-jwt-and-xacml-d03770a9a838&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MicroK8S</title>
      <link>https://wubigo.com/post/2018-11-24-microk8s/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-24-microk8s/</guid>
      <description>&lt;p&gt;Normally, ${SNAP_DATA} points to /var/snap/microK8S/current.
snap.microK8S.daemon-docker, is the docker daemon started using the arguments in ${SNAP_DATA}/args/dockerd&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$snap start microK8S
$microK8S.docker pull registry.cn-beijing.aliyuncs.com/google_containers/pause:3.1
$microK8S.docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1 K8S.gcr.io/pause:3.1


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for resource under namespace kube-system
all-namespaces don&amp;rsquo;t include kube-system&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$microK8S.kubectl describe po calico-node-4sq5r --namespace=kube-system

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&#34; target=&#34;_blank&#34;&gt;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>entry into jupyter notebook</title>
      <link>https://wubigo.com/post/2018-11-28-jupyternotebook/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-28-jupyternotebook/</guid>
      <description>

&lt;h1 id=&#34;generate-configuration-file&#34;&gt;generate configuration file&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$jupyter notebook --generate-config
Writing default config to: /home/bigo/.jupyter/jupyter_notebook_config.py
$ diff jupyter_notebook_config.py jupyter_notebook_config.py.bak 
c.NotebookApp.allow_remote_access = True
c.NotebookApp.ip = &#39;0.0.0.0&#39;
c.NotebookApp.open_browser = False
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;set-or-reset-password&#34;&gt;set or reset password&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$jupyter notebook password
Enter password: 
Verify password: 
[NotebookPasswordApp] Wrote hashed password to /home/bigo/.jupyter/jupyter_notebook_config.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then restart notebook server&lt;/p&gt;

&lt;h1 id=&#34;sharing-notebooks&#34;&gt;Sharing notebooks&lt;/h1&gt;

&lt;p&gt;When people talk of sharing their notebooks, there are generally two paradigms they may be considering.
Most often, individuals share the end-result of their work which means
sharing non-interactive, pre-rendered versions of their notebooks; however, it is also possible to collaborate
on notebooks with the aid version control systems such as Git&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.dataquest.io/blog/jupyter-notebook-tutorial/&#34; target=&#34;_blank&#34;&gt;https://www.dataquest.io/blog/jupyter-notebook-tutorial/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Choosing a CNI Network Provider for Kubernetes</title>
      <link>https://wubigo.com/post/2018-11-22-cninetworkproviderforkubernetes/</link>
      <pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-22-cninetworkproviderforkubernetes/</guid>
      <description>

&lt;p&gt;The Container Network Interface (CNI) is a library definition, and a set of tools under the umbrella of the Cloud
Native Computing Foundation project. For more information visit their GitHub project.
Kubernetes uses CNI as an interface between network providers and Kubernetes networking.&lt;/p&gt;

&lt;h1 id=&#34;why-use-cni&#34;&gt;Why Use CNI&lt;/h1&gt;

&lt;p&gt;Kubernetes default networking provider, kubenet, is a simple network plugin that works with various cloud providers.
Kubenet is a very basic network provider, and basic is good, but does not have very many features. Moreover, kubenet
has many limitations. For instance, when running kubenet in AWS Cloud, you are limited to 50 EC2 instances.
Route tables are used to configure network traffic between Kubernetes nodes, and are limited to 50 entries per VPC.
Moreover, a cluster cannot be set up in a Private VPC, since that network topology uses multiple route tables. Other
more advanced features, such as BGP, egress control, and mesh networking, are only available with different CNI providers.&lt;/p&gt;

&lt;h1 id=&#34;cni-in-kops&#34;&gt;CNI in kops&lt;/h1&gt;

&lt;p&gt;At last count, kops supports seven different CNI providers besides kubenet. Choosing from seven different network providers is a daunting task.&lt;/p&gt;

&lt;p&gt;Here is our current list of providers that can be installed out of the box, sorted in alphabetical order.&lt;/p&gt;

&lt;p&gt;Calico
Canal (Flannel + Calico)
flannel
kopeio-vxlan
kube-router
romana
Weave Net
Any of these CNI providers can be used without kops. All of the CNI providers use a daemonset installation model,
where their product deploys a Kubernetes Daemonset. Just use kubectl to install the provider on the master once the
K8S API server has started. Please refer to each projects specific documentation&lt;/p&gt;

&lt;h1 id=&#34;support-matrix&#34;&gt;Support Matrix&lt;/h1&gt;

&lt;p&gt;a table of different features from each of the CNI providers mentioned:&lt;/p&gt;

&lt;p&gt;|  Provider     | Network Model| Route Distribution|Network Policies|Mesh      | |External Datastore|Encryption|Ingress/Egress Policies| Commercial Support|
| :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | :&amp;mdash;&amp;mdash;&amp;mdash;-: | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;: |:&amp;mdash;&amp;mdash;&amp;ndash; | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-: | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-: |:&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; : |
|  Calico       | Layer 3      | Yes                                |Yes       | Etcd               | Yes                              | Yes               |
|  flannel      | Layer 2 vxlan| Mo                                 |No        | None               | No                               | No                |
|  Weave        | Layer 2 vxlan| N/A                                |Yes       | No                 | Yes                              | Yes               |&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Calico and Canal include a feature to connect directly to Kubernetes, and not use Etcd.&lt;/li&gt;
&lt;li&gt;Weave Net can operate in AWS-VPC mode without vxlan, but is limited to 50 nodes in EC2.&lt;/li&gt;
&lt;li&gt;Weave Net does not have egress rules out of the box.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Table Details&lt;/p&gt;

&lt;h1 id=&#34;network-model&#34;&gt;Network Model&lt;/h1&gt;

&lt;p&gt;The Network Model with providers is either encapsulated networking such as VXLAN, or unencapsulated layer 2 networking.
 Encapsulating network traffic requires compute to process, so theoretically is slower. In my opinion, most use cases
 will not be impacted by the overhead. More about VXLAN on wikipedia.&lt;/p&gt;

&lt;h1 id=&#34;route-distribution&#34;&gt;Route Distribution&lt;/h1&gt;

&lt;p&gt;For layer 3 CNI providers, route distribution is necssary. Route distribution is typically via BGP. Route distribution
is nice to have a feature with CNI, if you plan to build clusters split across network segments. It is an exterior
gateway protocol designed to exchange routing and reachability information on the internet. BGP can assist with pod to
pod networking between clusters.&lt;/p&gt;

&lt;h1 id=&#34;network-policies&#34;&gt;Network Policies&lt;/h1&gt;

&lt;p&gt;A kubernetes.io blog post about network policies in 1.8 here.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kubernetes now offers functionality to enforce rules about which pods can communicate with each other using network
policies. This feature is has become stable Kubernetes 1.7 and is ready to use with supported networking plugins. 
The Kubernetes 1.8 release has added better capabilities to this feature.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mesh-networking&#34;&gt;Mesh Networking&lt;/h1&gt;

&lt;p&gt;This feature allows for “Pod to Pod” networking between Kubernetes clusters. This technology is not Kubernetes
federation, but is pure networking between Pods.&lt;/p&gt;

&lt;h1 id=&#34;encyption&#34;&gt;Encyption&lt;/h1&gt;

&lt;p&gt;Encrypting the network control plane, so all TCP and UDP traffic is encrypted.&lt;/p&gt;

&lt;h1 id=&#34;ingress-egress-policies&#34;&gt;Ingress / Egress Policies&lt;/h1&gt;

&lt;p&gt;The network policies are both Kubernetes and Non-Kubernetes routing control. For instance, many providers will allow
an administrator to block a pod communicating with an EC2 instance meta and data service on 169.254.169.254.&lt;/p&gt;

&lt;p&gt;Summary
If you do not need the advanced features that a CNI provider delivers, use kubenet. It is stable, and fast.
Otherwise, pick one. If you do need run more than 50 nodes on AWS, or need other advanced features, make a decision
quickly (don’t spend days deciding), and test with your cluster. File bugs, and develop a relationship with your
network provider. At this point in time, networking is not boring in Kubernetes. It is getting more boring every
day! Monitor test and monitor more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/&#34; target=&#34;_blank&#34;&gt;https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
