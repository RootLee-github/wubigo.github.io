<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>为人民服务 on 为人民服务</title>
    <link>https://wubigo.com/</link>
    <description>Recent content in 为人民服务 on 为人民服务</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Feb 2019 11:38:27 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blog on hugo way</title>
      <link>https://wubigo.com/post/blog_on_hugo/</link>
      <pubDate>Fri, 22 Feb 2019 11:38:27 +0800</pubDate>
      
      <guid>https://wubigo.com/post/blog_on_hugo/</guid>
      <description>

&lt;h1 id=&#34;setup-for-gitlab&#34;&gt;setup for gitlab&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;tee .gitlab-ci.yml &amp;lt;&amp;lt; EOF
image: monachus/hugo

variables:
  GIT_SUBMODULE_STRATEGY: recursive

pages:
  script:
  - hugo
  artifacts:
    paths:
    - public
  only:
  - master
EOF

git init
echo &amp;quot;/public&amp;quot; &amp;gt;&amp;gt; .gitignore  

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;post&#34;&gt;post&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;hugo new post/&lt;post_name&gt;.md&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;deploy&#34;&gt;deploy&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;hugo
publish the public to web server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;configuration-lookup-order&#34;&gt;Configuration Lookup Order&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;./config.toml&lt;/li&gt;
&lt;li&gt;./config.yaml&lt;/li&gt;
&lt;li&gt;./config.json&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/hugo-logo-wide.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kubeamd cheat sheet</title>
      <link>https://wubigo.com/post/2019-02-11-kubeamdcheatsheet/</link>
      <pubDate>Mon, 11 Feb 2019 11:38:27 +0800</pubDate>
      
      <guid>https://wubigo.com/post/2019-02-11-kubeamdcheatsheet/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;get all Pending pods&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --field-selector=status.phase=Pending
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;version notes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;some only works on 1.13&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm version: &amp;amp;version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;13&amp;quot;, GitVersion:&amp;quot;v1.13.3&amp;quot;,
GitCommit:&amp;quot;721bfa751924da8d1680787490c54b9179b1fed0&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2019-02-16T15:29:34Z&amp;quot;, 
GoVersion:&amp;quot;go1.11.5&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;linux/amd64&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Starting with Kubernetes 1.12, the k8s.gcr.io/kube-${ARCH}, k8s.gcr.io/etcd and k8s.gcr.io/pause images don’t require an -&lt;strong&gt;${ARCH}&lt;/strong&gt; suffix&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;images list&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config images list -v 4
I0217 07:28:13.305268   14495 interface.go:384] Looking for default routes with IPv4 addresses
I0217 07:28:13.307275   14495 interface.go:389] Default route transits interface &amp;quot;enp0s3&amp;quot;
I0217 07:28:13.308349   14495 interface.go:196] Interface enp0s3 is up
I0217 07:28:13.309611   14495 interface.go:244] Interface &amp;quot;enp0s3&amp;quot; has 2 addresses :[192.168.1.9/24 fe80::a00:27ff:fe75:f493/64].
I0217 07:28:13.310328   14495 interface.go:211] Checking addr  192.168.1.9/24.
I0217 07:28:13.311219   14495 interface.go:218] IP found 192.168.1.9
I0217 07:28:13.311961   14495 interface.go:250] Found valid IPv4 address 192.168.1.9 for interface &amp;quot;enp0s3&amp;quot;.
I0217 07:28:13.312688   14495 interface.go:395] Found active IP 192.168.1.9 
I0217 07:28:13.313427   14495 version.go:163] fetching Kubernetes version from URL: https://dl.k8s.io/release/stable-1.txt
I0217 07:28:23.320683   14495 version.go:94] could not fetch a Kubernetes version from the internet: unable to get URL &amp;quot;https://dl.k8s.io/release/stable-1.txt&amp;quot;: Get https://storage.googleapis.com/kubernetes-release/release/stable-1.txt: net/http: request canceled (Client.Timeout exceeded while awaiting headers)
I0217 07:28:23.321520   14495 version.go:95] falling back to the local client version: v1.13.3
I0217 07:28:23.330622   14495 feature_gate.go:206] feature gates: &amp;amp;{map[]}
k8s.gcr.io/kube-apiserver:v1.13.3
k8s.gcr.io/kube-controller-manager:v1.13.3
k8s.gcr.io/kube-scheduler:v1.13.3
k8s.gcr.io/kube-proxy:v1.13.3
k8s.gcr.io/pause:3.1
k8s.gcr.io/etcd:3.2.24
k8s.gcr.io/coredns:1.2.6
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;pull images beforehand&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config images pull -v 4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;init-phase&#34;&gt;init phase&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;kubeadm config print init-defaults &amp;gt;adm.defaults.yaml
git diff adm.defaults.yaml
-imageRepository: k8s.gcr.io
+imageRepository: mirrorgooglecontainers
sudo kubeadm init phase preflight --config=./adm.defaults.yaml -v 4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;self-hosting-the-kubernetes-control-plane&#34;&gt;Self-hosting the Kubernetes control plane&lt;/h1&gt;

&lt;p&gt;As of 1.8, you can experimentally create a self-hosted Kubernetes control plane. This means that key components such as the API server, controller manager, and scheduler run as DaemonSet pods configured via the Kubernetes API instead of static pods configured in the kubelet via static files.
To create a self-hosted cluster, pass the flag &amp;ndash;feature-gates=SelfHosting=true to kubeadm init.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/setup-ha-etcd-with-kubeadm/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/setup-ha-etcd-with-kubeadm/&lt;/a&gt;
&lt;a href=&#34;https://discuss.kubernetes.io/t/question-about-etcd-cluster-with-kubeadm-in-1-11/1228&#34; target=&#34;_blank&#34;&gt;https://discuss.kubernetes.io/t/question-about-etcd-cluster-with-kubeadm-in-1-11/1228&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get configmaps --all-namespaces
kubectl describe configmaps kubeadm-config -n kube-system

kubectl -n kube-system get deployment coredns -o yaml | \
  sed &#39;s/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g&#39; | \
  kubectl apply -f -
  
kubectl scale --current-replicas=2 --replicas=1 deployments.apps/nginx1-14
kubectl logs calico-node-4mb5z -n kube-system
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HTTP/3</title>
      <link>https://wubigo.com/post/2019-02-01-http3notes/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2019-02-01-http3notes/</guid>
      <description>

&lt;h1 id=&#34;main-goal&#34;&gt;main goal&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP/2&amp;rsquo;s multiplexed connections, allowing multiple streams of data to reach all the endpoints independently. In contrast,
HTTP hosted on Transmission Control Protocol (TCP) can be blocked if any of the multiplexed data streams has an error.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reduced connection and transport latency, and bandwidth estimation in each direction to avoid congestion.
It also moves control of the congestion avoidance algorithms into the application space at both endpoints,
rather than the kernel space, which it is claimed will allow these algorithms to improve more rapidly.
Additionally, the protocol can be extended with forward error correction (FEC) to further improve performance
when errors are expected&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[1]. &lt;a href=&#34;https://box.matto.nl/revivegopher.html&#34; target=&#34;_blank&#34;&gt;revive Gopherspace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2]. &lt;a href=&#34;https://gopher.floodgap.com/&#34; target=&#34;_blank&#34;&gt;gopher client&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7 level communication</title>
      <link>https://wubigo.com/post/2019-01-01-sevenlevelcommunication/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2019-01-01-sevenlevelcommunication/</guid>
      <description>&lt;p&gt;The most important conversation you ever have is the one with yourself&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/7level-communication.jpg&#34; alt=&#34;7 lvevel communication&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux network</title>
      <link>https://wubigo.com/post/2018-11-23-linuxnetwork/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-23-linuxnetwork/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&#34; target=&#34;_blank&#34;&gt;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Microk8s</title>
      <link>https://wubigo.com/post/2018-11-24-microk8s/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-24-microk8s/</guid>
      <description>&lt;p&gt;Normally, ${SNAP_DATA} points to /var/snap/microk8s/current.
snap.microk8s.daemon-docker, is the docker daemon started using the arguments in ${SNAP_DATA}/args/dockerd&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$snap start microk8s
$microk8s.docker pull registry.cn-beijing.aliyuncs.com/google_containers/pause:3.1
$microk8s.docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1 k8s.gcr.io/pause:3.1


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for resource under namespace kube-system
all-namespaces don&amp;rsquo;t include kube-system&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$microk8s.kubectl describe po calico-node-4sq5r --namespace=kube-system

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&#34; target=&#34;_blank&#34;&gt;https://events.static.linuxfound.org/sites/events/files/slides/2016%20-%20Linux%20Networking%20explained_0.pdf&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>entry into jupyter notebook</title>
      <link>https://wubigo.com/post/2018-11-28-jupyternotebook/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-28-jupyternotebook/</guid>
      <description>

&lt;h1 id=&#34;generate-configuration-file&#34;&gt;generate configuration file&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$jupyter notebook --generate-config
Writing default config to: /home/bigo/.jupyter/jupyter_notebook_config.py
$ diff jupyter_notebook_config.py jupyter_notebook_config.py.bak 
c.NotebookApp.allow_remote_access = True
c.NotebookApp.ip = &#39;0.0.0.0&#39;
c.NotebookApp.open_browser = False
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;set-or-reset-password&#34;&gt;set or reset password&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$jupyter notebook password
Enter password: 
Verify password: 
[NotebookPasswordApp] Wrote hashed password to /home/bigo/.jupyter/jupyter_notebook_config.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then restart notebook server&lt;/p&gt;

&lt;h1 id=&#34;sharing-notebooks&#34;&gt;Sharing notebooks&lt;/h1&gt;

&lt;p&gt;When people talk of sharing their notebooks, there are generally two paradigms they may be considering.
Most often, individuals share the end-result of their work which means
sharing non-interactive, pre-rendered versions of their notebooks; however, it is also possible to collaborate
on notebooks with the aid version control systems such as Git&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.dataquest.io/blog/jupyter-notebook-tutorial/&#34; target=&#34;_blank&#34;&gt;https://www.dataquest.io/blog/jupyter-notebook-tutorial/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Choosing a CNI Network Provider for Kubernetes</title>
      <link>https://wubigo.com/post/2018-11-22-cninetworkproviderforkubernetes/</link>
      <pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-22-cninetworkproviderforkubernetes/</guid>
      <description>

&lt;p&gt;The Container Network Interface (CNI) is a library definition, and a set of tools under the umbrella of the Cloud
Native Computing Foundation project. For more information visit their GitHub project.
Kubernetes uses CNI as an interface between network providers and Kubernetes networking.&lt;/p&gt;

&lt;h1 id=&#34;why-use-cni&#34;&gt;Why Use CNI&lt;/h1&gt;

&lt;p&gt;Kubernetes default networking provider, kubenet, is a simple network plugin that works with various cloud providers.
Kubenet is a very basic network provider, and basic is good, but does not have very many features. Moreover, kubenet
has many limitations. For instance, when running kubenet in AWS Cloud, you are limited to 50 EC2 instances.
Route tables are used to configure network traffic between Kubernetes nodes, and are limited to 50 entries per VPC.
Moreover, a cluster cannot be set up in a Private VPC, since that network topology uses multiple route tables. Other
more advanced features, such as BGP, egress control, and mesh networking, are only available with different CNI providers.&lt;/p&gt;

&lt;h1 id=&#34;cni-in-kops&#34;&gt;CNI in kops&lt;/h1&gt;

&lt;p&gt;At last count, kops supports seven different CNI providers besides kubenet. Choosing from seven different network providers is a daunting task.&lt;/p&gt;

&lt;p&gt;Here is our current list of providers that can be installed out of the box, sorted in alphabetical order.&lt;/p&gt;

&lt;p&gt;Calico
Canal (Flannel + Calico)
flannel
kopeio-vxlan
kube-router
romana
Weave Net
Any of these CNI providers can be used without kops. All of the CNI providers use a daemonset installation model,
where their product deploys a Kubernetes Daemonset. Just use kubectl to install the provider on the master once the
K8s API server has started. Please refer to each projects specific documentation&lt;/p&gt;

&lt;h1 id=&#34;support-matrix&#34;&gt;Support Matrix&lt;/h1&gt;

&lt;p&gt;a table of different features from each of the CNI providers mentioned:&lt;/p&gt;

&lt;p&gt;|  Provider     | Network Model| Route Distribution|Network Policies|Mesh      | |External Datastore|Encryption|Ingress/Egress Policies| Commercial Support|
| :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | :&amp;mdash;&amp;mdash;&amp;mdash;-: | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;: |:&amp;mdash;&amp;mdash;&amp;ndash; | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-: | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-: |:&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; : |
|  Calico       | Layer 3      | Yes                                |Yes       | Etcd               | Yes                              | Yes               |
|  flannel      | Layer 2 vxlan| Mo                                 |No        | None               | No                               | No                |
|  Weave        | Layer 2 vxlan| N/A                                |Yes       | No                 | Yes                              | Yes               |&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Calico and Canal include a feature to connect directly to Kubernetes, and not use Etcd.&lt;/li&gt;
&lt;li&gt;Weave Net can operate in AWS-VPC mode without vxlan, but is limited to 50 nodes in EC2.&lt;/li&gt;
&lt;li&gt;Weave Net does not have egress rules out of the box.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Table Details&lt;/p&gt;

&lt;h1 id=&#34;network-model&#34;&gt;Network Model&lt;/h1&gt;

&lt;p&gt;The Network Model with providers is either encapsulated networking such as VXLAN, or unencapsulated layer 2 networking.
 Encapsulating network traffic requires compute to process, so theoretically is slower. In my opinion, most use cases
 will not be impacted by the overhead. More about VXLAN on wikipedia.&lt;/p&gt;

&lt;h1 id=&#34;route-distribution&#34;&gt;Route Distribution&lt;/h1&gt;

&lt;p&gt;For layer 3 CNI providers, route distribution is necssary. Route distribution is typically via BGP. Route distribution
is nice to have a feature with CNI, if you plan to build clusters split across network segments. It is an exterior
gateway protocol designed to exchange routing and reachability information on the internet. BGP can assist with pod to
pod networking between clusters.&lt;/p&gt;

&lt;h1 id=&#34;network-policies&#34;&gt;Network Policies&lt;/h1&gt;

&lt;p&gt;A kubernetes.io blog post about network policies in 1.8 here.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kubernetes now offers functionality to enforce rules about which pods can communicate with each other using network
policies. This feature is has become stable Kubernetes 1.7 and is ready to use with supported networking plugins. 
The Kubernetes 1.8 release has added better capabilities to this feature.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mesh-networking&#34;&gt;Mesh Networking&lt;/h1&gt;

&lt;p&gt;This feature allows for “Pod to Pod” networking between Kubernetes clusters. This technology is not Kubernetes
federation, but is pure networking between Pods.&lt;/p&gt;

&lt;h1 id=&#34;encyption&#34;&gt;Encyption&lt;/h1&gt;

&lt;p&gt;Encrypting the network control plane, so all TCP and UDP traffic is encrypted.&lt;/p&gt;

&lt;h1 id=&#34;ingress-egress-policies&#34;&gt;Ingress / Egress Policies&lt;/h1&gt;

&lt;p&gt;The network policies are both Kubernetes and Non-Kubernetes routing control. For instance, many providers will allow
an administrator to block a pod communicating with an EC2 instance meta and data service on 169.254.169.254.&lt;/p&gt;

&lt;p&gt;Summary
If you do not need the advanced features that a CNI provider delivers, use kubenet. It is stable, and fast.
Otherwise, pick one. If you do need run more than 50 nodes on AWS, or need other advanced features, make a decision
quickly (don’t spend days deciding), and test with your cluster. File bugs, and develop a relationship with your
network provider. At this point in time, networking is not boring in Kubernetes. It is getting more boring every
day! Monitor test and monitor more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/&#34; target=&#34;_blank&#34;&gt;https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>build tensorflow 1.12</title>
      <link>https://wubigo.com/post/2018-11-08-buildtensorflow-1-12/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-08-buildtensorflow-1-12/</guid>
      <description>

&lt;p&gt;Note:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Starting with TensorFlow 1.6, binaries use AVX instructions which may not run on older CPUs
  Have to build 1.6 or higher from source to run on older CPU&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bazel 0.19.0 doesn&amp;rsquo;t read tools/bazel.rc anymore
WARNING: The following rc files are no longer being read, please transfer their contents or import their path into one of the standard rc files:
tensorflow-1.12.0/tools/bazel.rc&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --cxxopt=&amp;quot;-D_GLIBCXX_USE_CXX11_ABI=0&amp;quot; --sandbox_debug &amp;gt; build.log 2&amp;gt;&amp;amp;1

$bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

$pip install /tmp/tensorflow_pkg/tensorflow-&amp;lt;blah&amp;gt;.whl

$python -c &#39;import tensorflow as tf; print(tf.__version__)&#39;

$pip list | grep tensorflow
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;network-performance-monitoring&#34;&gt;network-performance-monitoring&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow/issues/23402&#34; target=&#34;_blank&#34;&gt;https://github.com/tensorflow/tensorflow/issues/23402&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux performance</title>
      <link>https://wubigo.com/post/2018-11-07-linuxperformancetuning/</link>
      <pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-11-07-linuxperformancetuning/</guid>
      <description>

&lt;p&gt;ubuntu 16 default&lt;/p&gt;

&lt;p&gt;Interrupt Coalescence (IC)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ethtool -c enp0s25
Coalesce parameters for enp0s25:
Adaptive RX: off  TX: off
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pause frames&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ethtool -a enp0s25
Pause parameters for enp0s25:
Autonegotiate:	on
RX:		on
TX:		on

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;network&#34;&gt;network&lt;/h1&gt;

&lt;p&gt;Tuning the network adapter (NIC)&lt;/p&gt;

&lt;p&gt;use Jumbo frames&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifconfig eth0 mtu 9000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ip result for a healthy system with no packet drops&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip -s link show eth0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;stop irqbalance for home user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl disable/stop irqbalance
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;network-performance-monitoring&#34;&gt;network-performance-monitoring&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://opensourceforu.com/2016/10/network-performance-monitoring/&#34; target=&#34;_blank&#34;&gt;https://opensourceforu.com/2016/10/network-performance-monitoring/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;linux-network-tcp-performance-tuning-with-sysctl&#34;&gt;Linux Network (TCP) Performance Tuning with Sysctl&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.slashroot.in/linux-network-tcp-performance-tuning-sysctl&#34; target=&#34;_blank&#34;&gt;https://www.slashroot.in/linux-network-tcp-performance-tuning-sysctl&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dgraph note</title>
      <link>https://wubigo.com/post/2018-04-07-dgraphnotes/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-04-07-dgraphnotes/</guid>
      <description>

&lt;h1 id=&#34;start-dgraph-cluster&#34;&gt;Start Dgraph cluster&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;dgraph zero
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;start-dgraph-server&#34;&gt;start Dgraph server&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; dgraph server --memory_mb 2048 --zero localhost:5080 --port_offset 2000

 Note:port_offsetValue added to all listening port numbers. [Internal=7080, HTTP=8080, Grpc=9080]

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;how-do-i-configure-go-to-use-a-proxy&#34;&gt;How do I configure Go to use a proxy&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/10383299/how-do-i-configure-go-to-use-a-proxy&#34; target=&#34;_blank&#34;&gt;https://stackoverflow.com/questions/10383299/how-do-i-configure-go-to-use-a-proxy&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;web-based-graph-visualization-with-d3-and-keylines&#34;&gt;Web based graph visualization with D3 and KeyLines&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://cambridge-intelligence.com/web-graph-visualization-d3-keylines/&#34; target=&#34;_blank&#34;&gt;https://cambridge-intelligence.com/web-graph-visualization-d3-keylines/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;setup-client&#34;&gt;SETUP CLIENT&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;set http_proxy=192.168.0.119:3128
git config --global http.proxy http://192.168.0.119:3128
go get -u github.com/derekparker/delve/cmd/dlv
go get -u -v github.com/dgraph-io/dgo
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>最重要的人脉</title>
      <link>https://wubigo.com/post/2018-03-28-%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%BA%E8%84%89/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-03-28-%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%BA%E8%84%89/</guid>
      <description>

&lt;p&gt;你的老板，才是你最重要的人脉&lt;/p&gt;

&lt;p&gt;我相信这世界上，90% 的人都有过诅咒上司的一刻。偏执、变态、有病这些词，都是恨不得改成老板微信标签的定语。&lt;/p&gt;

&lt;p&gt;但是说大实话，年纪轻轻就有人促使你学会面对职场残酷的人，那不是一个贵人是什么？&lt;/p&gt;

&lt;p&gt;但是我们该如何面对这个残忍的贵人呢？我掏心掏肺给你一点方向。&lt;/p&gt;

&lt;h1 id=&#34;上司不是用来喜欢的-他不过是你的资源&#34;&gt;上司不是用来喜欢的 他不过是你的资源&lt;/h1&gt;

&lt;p&gt;最近老同事 Susan 给我打来了电话，很苦恼：我怎么就摊上了这样的破上司呢？&lt;/p&gt;

&lt;p&gt;不等我回答，她就直接自问自答：老板觉得我有能力，但是认为我对他不够尊重，就因为这样竟然就要封杀我！我要跳槽了！&lt;/p&gt;

&lt;p&gt;我笑了，你的情形再惨，惨得过孙悟空吗？毕竟唐僧动不动就给他念紧箍咒，没两天就叫他收拾包袱走人，他不也一样跟唐僧一起去取了个经回来吗。&lt;/p&gt;

&lt;p&gt;这无非是因为，孙悟空是足够聪明的猴子。&lt;/p&gt;

&lt;p&gt;他知道，唐僧是他老孙的一个重要资源，而不仅仅是他的上司。哪怕师傅再迂腐无能，再是非不分，他还是能调动观音菩萨、如来
佛祖来到身边的人。&lt;/p&gt;

&lt;p&gt;「要换做是我」，我笑着说，「尊重还不容易吗，态度好点就行了，直到他把行业诸多诀窍都教会我，再走。」&lt;/p&gt;

&lt;p&gt;Susan 开始若有所思了。她和大部分年轻人一样，对这个道理都不太懂。&lt;/p&gt;

&lt;p&gt;大部分人觉得：老板是资方，自己是劳方，天生就是对立的两端。毕竟在现实生活中逼你干活、骂你不对、给你 Mission impossible 的人就是他啊。&lt;/p&gt;

&lt;p&gt;但是聪明人却是这么看的：老板是小宇宙，自己也是小宇宙，只要懂得挖，他就是我的合作方，我的资源库。&lt;/p&gt;

&lt;p&gt;话说大名鼎鼎的格力董明珠，也有一个相处得不太顺当的前老板朱江洪。&lt;/p&gt;

&lt;p&gt;1991 年，朱江洪是格力的总经理，董明珠是一名普通的销售。一个技术狂，一个铁娘子，免不了争吵。&lt;/p&gt;

&lt;p&gt;然而争吵归争吵，董明珠还是在朱江洪的提拔下，从经营部长、大区经理、副总、总裁做到到格力集团董事长。两个人合作，把格力带进了千亿俱乐部，甚至突破了两千亿销售大关。&lt;/p&gt;

&lt;p&gt;董明珠就是这样一个足够机智的人。吵架归吵架，矛盾归矛盾，心底里骂过对方多少句「傻X」没关系，互相依赖、相互合作做出成绩来才是关键。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;每一个老板，无论多差劲，好歹都有一丝半点闪光点，否则他坐不到老板的位置上&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这样一个人，就是你人生长河中一个重要的资源库。&lt;/p&gt;

&lt;p&gt;多骂他几句「有病」，形成对立关系，无非是绝了自己获取人脉、信息、协助、建议的后路，这不是很笨吗？&lt;/p&gt;

&lt;h1 id=&#34;所有的职场恩怨-都起源于沟通不够&#34;&gt;所有的职场恩怨，都起源于沟通不够&lt;/h1&gt;

&lt;p&gt;我刚开始工作的公司是个外企，沟通风格相当自由。&lt;/p&gt;

&lt;p&gt;上司和下属之间，有工作谈工作，没工作谈目标，没什么不能直接说的。很多人，哪怕跨了级，情同姐妹、称兄道弟的却比比皆是。&lt;/p&gt;

&lt;p&gt;然而当我到第一个民企工作的时候就感觉很压抑了。&lt;/p&gt;

&lt;p&gt;老板喜欢拍马屁，下属喜欢越位拍马屁，办公室流行着欲言又止的气氛，私下拉小群组帮派却热火朝天。所谓的人事厚黑学、信息不对称无处不在，我也算是开眼界了。&lt;/p&gt;

&lt;p&gt;然而我始终是一个好学宝宝，遇到问题和困难都喜欢探究个为什么。&lt;/p&gt;

&lt;p&gt;我发现，造成这么多职场政治的终极原因，无非就是沟通的问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;上司和下属之间沟通不明确，不拿出真心来说清楚要求，说一句留半句，剩下 9 句让你猜，这才是致命的低效源头&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;俄国作家契科夫曾经写过小说《公务员之死》。这个倒霉蛋公务员就是不会沟通的典型。&lt;/p&gt;

&lt;p&gt;他不小心打喷嚏的时候把鼻涕喷在前座的将军身上，公务员连忙道歉，将军撇了撇嘴说「没关系，算了」。&lt;/p&gt;

&lt;p&gt;然而，公务员却把将军的「撇嘴」看成很生气，接下来每天都去将军那里道歉，将军烦不胜烦，更加不想理他。结果小公务员就一直提心吊胆，到最后竟然吓死了。&lt;/p&gt;

&lt;p&gt;这就是「说者无心，听者有意」的典型。小学语文课不好好做阅读理解，跑到职场上对老板表情做那么多阅读理解干嘛？&lt;/p&gt;

&lt;p&gt;上司很糟糕不跟你沟通，你不也很糟糕地没去主动找上司沟通吗？
&lt;strong&gt;这世界上沟通是相互的，依赖别人终究被动，依赖自己才是王道&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;糟糕上司永远没有最后-跳槽也解决不了&#34;&gt;糟糕上司永远没有最后，跳槽也解决不了&lt;/h1&gt;

&lt;p&gt;不知道大家发现了没有，身边的朋友，只要在一个公司遇到委屈，很可能就会跳槽跑路。&lt;/p&gt;

&lt;p&gt;他们常常寄望的是，下一个公司遇到一个圣人一样的妈妈老板，天天怕你冷了怕你饿了，更怕你的玻璃心掉一地碎了，像养蛙游戏的老母亲一样日日念叨着你快回来。&lt;/p&gt;

&lt;p&gt;实际上，很可能下一个老板更奇葩，更凶猛，KPI 更难完成。大概这世界上遇到好老板的几率，和媳妇遇到好婆婆的几率差不多低。&lt;/p&gt;

&lt;p&gt;大家熟知的偶像刘德华，在成为天王巨星之前也跟不少导演合作过了。&lt;/p&gt;

&lt;p&gt;80 年代和杜琪峰合作拍《鹿鼎记》，由始到终都被杜老板骂不如男一号梁朝伟。&lt;/p&gt;

&lt;p&gt;90 年代写了第一首歌《情是那么笨》，被知名作词人黄霑毫不留情地指责：「没见过写情这么笨的作词人。」&lt;/p&gt;

&lt;p&gt;当他进军歌坛的时候，还是被歌坛的老大哥谭咏麟一脸不客气地说他不会唱歌，劝他打消进军歌坛的念头。&lt;/p&gt;

&lt;p&gt;你看，哪怕是个有点名声的小鲜肉换各种角色都可能被前辈痛骂，何况你这个籍籍无名的小土豆，怎么可能通过跳槽就彻底换了一个毫不糟心的环境呢？&lt;/p&gt;

&lt;p&gt;糟糕上司哪里都有，如果你能死不要脸地撑到最后，妥妥用能力告诉他「老大，你看走眼了」，那才叫做真的威风&lt;/p&gt;

&lt;h1 id=&#34;职场说到底也是成年人的生意场-每个人都是自己的老板&#34;&gt;职场说到底也是成年人的生意场，每个人都是自己的老板。&lt;/h1&gt;

&lt;p&gt;你的老板，你的同事，你的合作伙伴，都是你的供应商。&lt;/p&gt;

&lt;p&gt;他们身上的精华可以吸取，糟点可以避开，那你的装备才会越来越多，在升职加薪的路上一路打怪冲关。&lt;/p&gt;

&lt;p&gt;这年头流行让别人给自己「赋能」，现代管理学之父彼得·德鲁克比我们早数十年就看到上司的这个「功能」。他说：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Making the strength of the boss productive is a key to the subordinate’s own effectiveness.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;会用好上司的长处，才是你高效能的关键&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（文章来源于：维小维生素摘编）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connecting to SSL services</title>
      <link>https://wubigo.com/post/2018-03-07-connectingtosslservices/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-03-07-connectingtosslservices/</guid>
      <description>

&lt;h1 id=&#34;jdk-version&#34;&gt;JDK Version&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;java -version
openjdk version &amp;quot;1.8.0_151&amp;quot;
OpenJDK Runtime Environment (build 1.8.0_151-8u151-b12-0ubuntu0.16.04.2-b12)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;verify-that-the-target-server-is-configured-to-serve-ssl&#34;&gt;Verify that the target server is configured to serve SSL&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34; target=&#34;_blank&#34;&gt;https://www.ssllabs.com/ssltest/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;connecting-to-ssl-services&#34;&gt;Connecting to SSL services&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://confluence.atlassian.com/kb/unable-to-connect-to-ssl-services-due-to-pkix-path-building-failed-779355358.html&#34; target=&#34;_blank&#34;&gt;https://confluence.atlassian.com/kb/unable-to-connect-to-ssl-services-due-to-pkix-path-building-failed-779355358.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are getting an exception due to &amp;ldquo;Illegal key size&amp;rdquo; and you are using Sun’s JDK, you need to install the Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files.
See the following links for more information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html&#34; target=&#34;_blank&#34;&gt;Java 6 JCE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html&#34; target=&#34;_blank&#34;&gt;Java 7 JCE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html&#34; target=&#34;_blank&#34;&gt;Java 8 JCE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;connecting-to-ssl-server-from-eclipse&#34;&gt;Connecting to SSL Server from eclipse&lt;/h1&gt;

&lt;p&gt;Append the following to use keystore in eclipse tomcat server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-Djavax.net.ssl.trustStore=&amp;quot;C:\Program Files\Java\jdk1.8.0_121\jre\lib\
security&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;check-certificate-name-by-alias-then-remove-from-keystore-files&#34;&gt;check certificate name by alias then remove from keystore files&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$keytool -list -v -keystore cacerts | grep &#39;Alias name:&#39;

$sudo keytool -delete -alias wubigo  -keystore cacerts
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>自我管理</title>
      <link>https://wubigo.com/post/2018-03-17-%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-03-17-%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;导语：本文最早刊登于《哈佛商业评论》，是其历史最佳文章之一。
作者彼得·德鲁克是现代管理学之父，其著作影响了数代追求创新以及
最佳管理实践的学者和企业家们，各类商业管理课程也都深受彼得·德鲁克思想的影响。
本文后被收录在德鲁克的著作《21 世纪的管理挑战》中。非常值得一读再读。

作者 | 彼得·德鲁克

来源 | 《21世纪的管理挑战》第 6 章 自我管理（节选）

字数 | 7150（阅读约 10 分钟）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们生活的时代充满着前所未有的机会：如果你有雄心，又不乏智慧，那么不管你从何处起步，你都可以沿着自己所选择的道路登上事业的顶峰。&lt;/p&gt;

&lt;p&gt;不过，有了机会，也就有了责任。今天的公司并不怎么管员工的职业发展；实际上，知识工作者必须成为自己的首席执行官。你应该在公司中开辟自己的天地，知道何时改变发展道路，并在可能长达 50 年的职业生涯中不断努力、干出实绩。&lt;/p&gt;

&lt;p&gt;要做好这些事情，你首先要对自己有深刻的认识——不仅清楚自己的优点和缺点，也知道自己是怎样学习新知识和与别人共事的，并且还明白自己的价值观是什么、自己又能在哪些方面做出最大贡献。&lt;/p&gt;

&lt;p&gt;因为只有当所有工作都从自己的长处着眼，你才能真正做到卓尔不群。&lt;/p&gt;

&lt;p&gt;历史上的伟人——拿破仑、达芬奇、莫扎特——都很善于自我管理。这在很大程度上也是他们成为伟人的原因。不过，他们属于不可多得的奇才，不但有着不同于常人的天资，而且天生就会管理自己，因而才取得了不同于常人的成就。&lt;/p&gt;

&lt;p&gt;而我们当中的大多数人，甚至包括那些还算有点天赋的人，都不得不通过学习来掌握自我管理的技巧。&lt;/p&gt;

&lt;p&gt;我们必须学会自我发展，必须知道把自己放在什么样的位置上，才能做出最大的贡献，而且还必须在长达 50 年的职业生涯中保持着高度的警觉和投入。&lt;/p&gt;

&lt;h1 id=&#34;我们的长处是什么&#34;&gt;我们的长处是什么&lt;/h1&gt;

&lt;p&gt;多数人都以为他们知道自己擅长什么。其实不然，更多的情况是，人们只知道自己不擅长什么——即便是在这一点上，人们也往往认识不清。&lt;/p&gt;

&lt;p&gt;然而，一个人要有所作为，只能靠发挥自己的长处，而如果从事自己不太擅长的工作是无法取得成就的，更不用说那些自己根本干不了的事情了。&lt;/p&gt;

&lt;p&gt;我们需要知己所长，才能知己所属。&lt;/p&gt;

&lt;p&gt;要发现自己的长处，唯一途径就是回馈分析法（feedback analysis）。每当做出重要决定或采取重要行动时，你都可以事先记录下自己对结果的预期。9 到 12 个月后，再将实际结果与自己的预期比较。&lt;/p&gt;

&lt;p&gt;我本人采用这种方法已有 15 到 20 年了，而每次使用都有意外的收获。&lt;/p&gt;

&lt;p&gt;我们只要持之以恒地运用这个简单的方法，就能在较短的时间内，发现自己的长处。在采用这种方法之后，你就能知道，自己正在做（或没有做）的哪些事情会让你的长处无法发挥出来。&lt;/p&gt;

&lt;p&gt;同时，你也将看到自己在哪些方面能力不是特别强。最后，你还将了解到自己在哪些方面完全不擅长，做不出成绩来。&lt;/p&gt;

&lt;p&gt;根据回馈分析的启示，你需要在几方面采取行动。&lt;/p&gt;

&lt;p&gt;首先最重要的是，专注于你的长处，把自己放到那些能发挥长处的地方。&lt;/p&gt;

&lt;p&gt;其次，加强你的长处。回馈分析会迅速地显示，你在哪些方面需要改善自己的技能或学习新技能。它还将显示你在知识上的差距——这些差距通常都可以弥补。&lt;/p&gt;

&lt;p&gt;第三，发现任何由于恃才傲物而造成的偏见和无知，并且加以克服。有太多的人，尤其是那些术业有专攻的人，往往对其他领域的知识不屑一顾，或者认为聪明的头脑就可取代知识。&lt;/p&gt;

&lt;p&gt;比如，很多一流的工程师遇上与人相关的事就束手无策，他们还以此为荣——因为他们觉得，对条理清晰的工程师头脑来说，人太混乱无序了。与此形成鲜明对照的是，人力资源方面的专业人员常常以他们连基本的会计知识或数量分析都一无所知而自傲。&lt;/p&gt;

&lt;p&gt;不过，人们要是对这样的无知还沾沾自喜的话，那无异于自取灭亡。其实，要让自己的长处得到充分发挥，你就应该努力学习新技能、汲取新知识。&lt;/p&gt;

&lt;p&gt;另外一点也同样重要——纠正你的不良习惯。所谓不良习惯，是指那些会影响你的工作成效和工作表现的事情。这样的习惯能很快地在回馈中反映出来。&lt;/p&gt;

&lt;p&gt;与此同时，回馈还会反映出哪些问题是由缺乏礼貌造成的。礼貌是一个组织的润滑剂。&lt;/p&gt;

&lt;p&gt;礼貌，其实也很简单。无非是说声「请」和「谢谢」，记住别人的名字，或问候对方家人这样的小事。许多聪明人，尤其是聪明的年轻人，没有意识到这一点。&lt;/p&gt;

&lt;p&gt;如果回馈分析表明某个人只要一遇到需要别人合作的事就屡屡失败，那么很可能就意味着这个人的举止不大得体——也就是缺乏礼貌。&lt;/p&gt;

&lt;p&gt;把预期和实际结果进行比较，也会发现自己不能做什么。我们每个人都有许多一窍不通、毫无天分的领域，在这些领域我们甚至连平庸的水平都达不到。人们，尤其是知识工作者，就不应该试图去完成这些领域的工作和任务。他们应该尽量少把精力浪费在那些不能胜任的领域上，因为从无能到平庸要比从一流到卓越需要人们付出多得多的努力。&lt;/p&gt;

&lt;h1 id=&#34;我们的工作方式是怎样的&#34;&gt;我们的工作方式是怎样的&lt;/h1&gt;

&lt;p&gt;很少有人知道自己平时是怎样把事情给做成的。&lt;/p&gt;

&lt;p&gt;实际上，我们当中的大多数人甚至不知道，不同人有着不同的工作方式和表现。&lt;/p&gt;

&lt;p&gt;许多人不是以他们习惯的方式工作，这当然就容易造成无所作为。&lt;/p&gt;

&lt;p&gt;对于知识工作者来说，「我的工作方式是怎样的？」可能比「我的长处是什么？」这个问题更加重要。&lt;/p&gt;

&lt;p&gt;同一个人的长处一样，一个人的工作方式也是独一无二的，这由人的个性决定。&lt;/p&gt;

&lt;p&gt;通常，几个常见的个性特征就决定了一个人的工作方式。&lt;/p&gt;

&lt;p&gt;我属于读者型，还是听者型？&lt;/p&gt;

&lt;p&gt;首先，你要搞清楚的是，你是读者型（习惯阅读信息）还是听者型（习惯听取信息）的人。绝大多数人甚至都不知道还有读者型和听者型之说，而且很少有人既是读者型又是听者型。知道自己属于哪种类型的人更少。&lt;/p&gt;

&lt;p&gt;没有几个听者型的人可以通过努力变成合格的读者型——不管是主动还是被动的努力，反之亦然。不了解你的工作方式不可能发挥才干或取得成就。&lt;/p&gt;

&lt;h1 id=&#34;我们如何学习&#34;&gt;我们如何学习&lt;/h1&gt;

&lt;p&gt;要了解一个人的工作方式，需要弄清的第二点是，他是如何学习的。&lt;/p&gt;

&lt;p&gt;许多一流的笔杆子都不是好学生——温斯顿·邱吉尔就是一例。&lt;/p&gt;

&lt;p&gt;有关这个问题的解释是，笔头好的人一般不靠听和读来学习，而靠写来学习，这已成了一种规律。学校不让他们以这种方式学习，所以他们的成绩总是很糟糕。&lt;/p&gt;

&lt;p&gt;实际上，学习大概有六七种不同的方式。&lt;/p&gt;

&lt;p&gt;像邱吉尔这样的人靠写来学习，还有些人以详尽的笔记来学习。有些人在实干中学习，另一些人通过听自己讲话学习。&lt;/p&gt;

&lt;p&gt;我属于读者型还是听者型？我如何学习？这是你首先要问自己的问题。&lt;/p&gt;

&lt;p&gt;但光这些问题显然不够。要想做好自我管理，你还需要问这样的问题：我能与别人合作得好吗？还是喜欢单枪匹马？如果你确实有与别人进行合作的能力，你还得问问这个问题：我在怎样的关系下与他人共事？&lt;/p&gt;

&lt;p&gt;有些人最适合当部属。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    二战时期美国的大英雄乔治·巴顿将军是一个很好的例子。
    巴顿是美军的一名高级将领。然而，当有人提议他担任独立指挥官时，
    美国陆军参谋长、可能也是美国历史上最成功的伯乐，
    乔治·马歇尔将军说：
   「巴顿是美国陆军造就的最优秀的部下，但是，他会成为最差劲的司令官。」
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一些人作为团队成员工作最出色。另一些人单独工作最出色。一些人当教练和导师特别有天赋，另一些人却没能力做导师。&lt;/p&gt;

&lt;p&gt;另一个关键的问题是，我如何才能取得成果——是作为决策者还是作为顾问？许多人做顾问时的表现会很出色，但是不能够承担决策的负担和压力。与此相反，也有许多人需要顾问来迫使他们思考，随后他们才能做出决定，接着迅速、自信和大胆地执行决定。&lt;/p&gt;

&lt;p&gt;顺便说一下，一个组织的二号人物在提升到一号职位时常常失败，也正是因为这个原因。最高职位需要一个决策者，而一个强势的决策者常常把其信赖的人放在二号位置，当他的顾问。&lt;/p&gt;

&lt;p&gt;其他有助于认识自我的重要问题包括：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    我是在压力下表现出色，还是适应一种按部就班、可预测的工作环境？


    我是在一个大公司还是在一个小公司中工作表现最佳？

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我不止一次地看到有些人在大公司中十分成功，换到小公司中则很不顺利。&lt;/p&gt;

&lt;p&gt;反过来也是如此。&lt;/p&gt;

&lt;p&gt;下面这个结论值得我们反复强调：不要试图改变自我，因为这样你不大可能成功。但是，你应该努力改进你的工作方式。另外，不要从事你干不了或干不好的工作。&lt;/p&gt;

&lt;h1 id=&#34;我们的价值观是什么&#34;&gt;我们的价值观是什么&lt;/h1&gt;

&lt;p&gt;要能够自我管理，你最后不得不问的问题是：我的价值观是什么？这不是一个有关伦理道德的问题。道德准则对每一个人都一样。要对一个人的道德进行测试，方法很简单，我把它称为「镜子测试」。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    20 世纪初，德国驻英国大使是当时在伦敦所有大国中最受尊重的一位外交官。
    显然，他命中注定会承担重任，即使不当本国的总理，至少也要当外交部长。
    然而，在 1906 年，他突然辞职，不愿主持外交使团为英国国王爱德华七世举行的晚宴。
    这位国王是一个臭名昭著的色鬼，并且明确表示他想出席什么样的晚宴。
    据有关报道，这位德国大使曾说：
   「我不想早晨刮脸时在镜子里看到一个皮条客。」
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这就是镜子测试。&lt;/p&gt;

&lt;p&gt;我们所尊从的伦理道德要求你问自己：我每天早晨在镜子里想看到一个什么样的人？在一个组织或一种情形下合乎道德的行为，在另一个组织或另一种情形下也是合乎道德的。但是，道德只是价值体系的一部分——尤其对于一个组织的价值体系来说。&lt;/p&gt;

&lt;p&gt;如果一个组织的价值体系不为自己所接受或者与自己的价值观不相容，人们就会备感沮丧，工作效力低下。&lt;/p&gt;

&lt;p&gt;一个人的工作方式和他的长处很少发生冲突，相反，两者能产生互补。但是，一个人的价值观有时会与他的长处发生冲突。&lt;/p&gt;

&lt;h1 id=&#34;我们属于何处&#34;&gt;我们属于何处&lt;/h1&gt;

&lt;p&gt;少数人很早就知道他们属于何处。&lt;/p&gt;

&lt;p&gt;比如，数学家、音乐家和厨师，通常在四五岁的时候就知道自己会成为数学家、音乐家和厨师了。物理学家通常在十几岁甚至更早的时候就决定了自己的工作生涯。&lt;/p&gt;

&lt;p&gt;但是，大多数人，尤其是很有天赋的人，至少要过了二十五六岁才知道他们将身属何处。&lt;/p&gt;

&lt;p&gt;然而，到这个时候，他们应该知道上面所谈的三个问题的答案：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- 我的长处是什么？


- 我的工作方式是怎样的？


- 我的价值观是什么？
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;随后，他们就能够并且应该决定自己该向何处投入精力。或者，他们应该能够决定自己不属于何处。&lt;/p&gt;

&lt;p&gt;已经知道自己在大公司里干不好的人，应该学会拒绝在一个大公司中任职。已经知道自己不适合担任决策者的人，应该学会拒绝做决策工作。&lt;/p&gt;

&lt;p&gt;成功的事业不是预先规划的，而是在人们知道了自己的长处、工作方式和价值观后，准备把握机遇时水到渠成的。知道自己属于何处，可使一个勤奋、有能力但原本表现平平的普通人，变成出类拔萃的工作者。&lt;/p&gt;

&lt;h1 id=&#34;我该做什么贡献&#34;&gt;我该做什么贡献&lt;/h1&gt;

&lt;p&gt;综观人类的发展史，绝大多数人永远都不需要提出这样一个问题：我该做出什么贡献？因为他们该做出什么贡献是由别人告知的，他们的任务或是由工作本身决定的（例如农民或工匠的任务），或是由主人决定的（例如佣人的任务）。&lt;/p&gt;

&lt;p&gt;对于知识工作者来说，他们不得不提出一个以前从来没有提出过的问题：我的贡献应该是什么？&lt;/p&gt;

&lt;p&gt;要回答这个问题，他们必须考虑三个不同的因素：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- 当前形势的要求是什么？


- 鉴于我的长处、我的工作方式以及我的价值观，我怎样才能对需要完成的任务做出最大贡献？


- 最后，必须取得什么结果才能产生重要影响？
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一般来说，一项计划的时间跨度如果超过了 18 个月，就很难做到明确和具体。&lt;/p&gt;

&lt;p&gt;因此，在多数情况下我们应该提出的问题是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- 我在哪些方面能取得将在今后一年半内见效的结果？


- 如何取得这样的结果？
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;回答这个问题时必须对几个方面进行权衡。&lt;/p&gt;

&lt;p&gt;首先，这些结果应该是比较难实现的，要有「张力」 （stretching）。但这些结果也应该是能力所及的。&lt;/p&gt;

&lt;p&gt;其次，这些结果应该富有意义，要能够产生一定影响。&lt;/p&gt;

&lt;p&gt;最后，结果应该明显可见，如果可能的话，还应当能够衡量。确定了要实现的结果之后，接着就可以制订行动方针：做什么，从何处着手，如何开始，目标是什么，在多长时间内完成。&lt;/p&gt;

&lt;h1 id=&#34;对人际关系负责&#34;&gt;对人际关系负责&lt;/h1&gt;

&lt;p&gt;除了少数伟大的艺术家、科学家和运动员，很少有人是靠自己单枪匹马而取得成果的。不管是组织成员还是个体职业者，大多数人都要与别人进行合作，并且是有效的合作。要实现自我管理，你需要对自己的人际关系负起责任。这包括两部分内容。&lt;/p&gt;

&lt;p&gt;首先要接受别人是和你一样的个体这个事实。&lt;/p&gt;

&lt;p&gt;他们有自己的长处，自己的做事方式和价值观。因此，要想卓有成效，你就必须知道共事者的长处、工作方式和价值观。&lt;/p&gt;

&lt;p&gt;这个道理听起来让人很容易明白，但是没有几个人真正会去注意。&lt;/p&gt;

&lt;p&gt;一个习惯于写报告的人就是个典型的例子——他在第一份工作时就培养起写报告的习惯，因为他的老板是一个读者型的人，而即使下一个老板是个听者型，此人也会继续写着那肯定没有任何结果的报告。这位老板因此肯定会认为这个员工愚蠢、无能、懒惰，肯定干不好工作。但是，如果这个员工事先研究过新老板的情况，并分析过这位老板的工作方式，这种情况本来可以避免。&lt;/p&gt;

&lt;p&gt;老板既不是组织结构图上的一个头衔，也不是一个「职能」。他们是有个性的人，他们有权以自己最得心应手的方式来工作。与他们共事的人有责任观察他们，了解他们的工作方式，并做出相应的自我调整，去适应老板最有效的工作方式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;事实上，这就是「管理」上司的秘诀&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这种方法适用于所有与你共事的人。至于工作方式，人各有别。提高效力的第一个秘诀是了解跟你合作和你要依赖的人，以利用他们的长处、工作方式和价值观。工作关系应当既以工作为基础，也以人为基础。&lt;/p&gt;

&lt;p&gt;人际关系责任的第二部分内容是沟通责任。&lt;/p&gt;

&lt;p&gt;在我或是其他人开始给一个组织做咨询时，我们听到的第一件事都与个性冲突有关。其中大部分冲突都是因为：人们不知道别人在做什么，他们又是采取怎样的工作方式，专注于做出什么样的贡献以及期望得到怎样的结果。而这些人不了解情况的原因是，他们没有去问，结果也就不得而知。&lt;/p&gt;

&lt;p&gt;即使一些人懂得负起人际关系责任的重要性，他们和同事的交流也往往不够。他们总是有所顾虑，怕别人把自己看成是一个冒昧、愚蠢、爱打听的人。他们错了。&lt;/p&gt;

&lt;p&gt;因为我们看到，每当有人找到他的同事说「这是我所擅长的工作。这是我的做事方式。这是我的价值观。这是我计划做出的贡献和应当取得的成果」，这个人总会得到如此回答：「这太有帮助了，可你为什么不早点告诉我？」&lt;/p&gt;

&lt;p&gt;如果一个人继续问道：「那么，关于你的长处、你的工作方式、你的价值观以及你计划做出的贡献，我需要知道什么？」他也会得到类似的答复——据我的经验，无一例外。&lt;/p&gt;

&lt;p&gt;事实上，知识工作者应该向与他们共事的每一个人，不管是下属、上司、同事还是团队成员，都发出这样的疑问。&lt;/p&gt;

&lt;p&gt;组织已不再建立在强权的基础上，而是建立在信任的基础上。人与人之间相互信任，不一定意味着他们彼此喜欢对方，而是意味着彼此了解。因此，人们绝对有必要对自己的人际关系负责。&lt;/p&gt;

&lt;p&gt;这是一种义务。不管一个人是公司的一名成员，还是公司的顾问、供应商或经销商，他都需要对他的所有共事者负起这种责任。所谓共事者，是指在工作上他所依赖的同事以及依赖他的同事。&lt;/p&gt;

&lt;h1 id=&#34;管理后半生&#34;&gt;管理后半生&lt;/h1&gt;

&lt;p&gt;我们听到了许多有关经理人中年危机的谈论，「厌倦」这个词在其中频频出现。&lt;/p&gt;

&lt;p&gt;45 岁时，多数经理人的职业生涯达到了顶峰。但是他们学不到新东西，也没有什么新贡献，从工作中得不到挑战，因而也谈不上满足感。在他们面前，还有 20 到 25 年的职业道路要走。这就是为什么经理人在进行自我管理后，越来越多地开始发展第二职业的原因。&lt;/p&gt;

&lt;p&gt;发展第二职业有三种方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一种是完全投身于新工作。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这常常只需要从一种组织转到另一种组织。&lt;/p&gt;

&lt;p&gt;例如，一家大公司某事业部的会计师成为一家中型医院的财务总监。&lt;/p&gt;

&lt;p&gt;但是也有越来越多的人转入完全不同的职业。还有许多人在第一份职业中取得的成功有限，于是改行从事第二职业。这样的人有很多技能，他们也知道该如何工作。&lt;/p&gt;

&lt;p&gt;为后半生做准备的第二种方式是，
- 发展一个平行的职业。&lt;/p&gt;

&lt;p&gt;许多人的第一职业十分成功，他们还会继续从事原有工作。除此之外，他们会开创一项平行的工作，通常是在非营利机构。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最后一种方法是社会创业。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;社会创业者通常是在第一职业中非常成功的人士。他们都热爱自己的工作，但是这种工作对他们已经不再有挑战性。&lt;/p&gt;

&lt;p&gt;他们虽然继续做着原来的工作，但在这份工作上花的时间越来越少。他们同时开创了另一项事业，通常是非营利性活动。&lt;/p&gt;

&lt;p&gt;管理好自己后半生的人可能总是少数。多数人可能数着年头一年一年过去，直至退休。但正是这些少数人，这些把漫长的工作寿命看做是自己和社会之机会的人，才会成为领袖和模范。&lt;/p&gt;

&lt;p&gt;管理好后半生有一个先决条件：你必须早在你进入后半生之前就开始行动。当 30 年前人们首次认识到工作寿命正在迅速延长时，许多观察家（包括我自己）认为，退休人员会越来越多地成为非营利机构的志愿者。可是，这种情况并没有发生。一个人如果不在 40 岁之前就开始做志愿者，那他 60 岁之后也不会去做志愿者。&lt;/p&gt;

&lt;p&gt;同样，我认识的所有社会创业者，都是早在他们原有的事业达到顶峰之前就开始从事他们的第二事业。&lt;/p&gt;

&lt;p&gt;发展第二兴趣还有一个原因：任何人都不能指望在生活或工作中很长时间都不遭遇严重挫折。在这样的时刻，第二兴趣——不仅仅是业余爱好——可能发挥重要作用。&lt;/p&gt;

&lt;p&gt;在一个崇尚成功的社会里，拥有各种选择变得越来越重要。在知识社会里，我们期望每一个人都能取得成功。这显然是不可能的。&lt;/p&gt;

&lt;p&gt;对许多人来说，能避免失败就行。可是有成功的地方，就会有失败。因此，有一个能够让人们做出贡献、发挥影响力或成为「大人物」的领域，这不仅对个人十分重要，对个人的家庭也同样重要。&lt;/p&gt;

&lt;p&gt;这意味着人们需要找到一个能够有机会成为领袖、受到尊重、取得成功的第二领域——可能是第二份职业。&lt;/p&gt;

&lt;p&gt;自我管理中面临的挑战看上去比较明显。但自我管理需要我们做出以前从未做过的事情。自我管理需要每一个知识工作者在思想和行动上都要成为自己的首席执行官。&lt;/p&gt;

&lt;p&gt;更进一步来看，这样的转变——从一切听从别人吩咐的体力劳动者到不得不自我管理的知识工作者——也使得社会结构发生了深刻变化。&lt;/p&gt;

&lt;p&gt;历史上每一个社会，甚至是个人主义倾向最强的社会，都认为两件事情理所当然（即使只是下意识的）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- 第一，组织比员工更长寿；


- 第二，大多数人从不挪地方。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如今，情况恰恰相反。知识工作者的寿命超过了组织寿命，而且他们来去自如。&lt;/p&gt;

&lt;p&gt;于是，人们对自我管理的需要在人类事务中掀起了一场革命。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>File Gateway for Hybrid Architectures; Overview and Best Practices</title>
      <link>https://wubigo.com/post/2018-03-02-filegatewayforhybridarchitectures/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wubigo.com/post/2018-03-02-filegatewayforhybridarchitectures/</guid>
      <description>&lt;p&gt;Organizations are looking for ways to reduce their physical data center footprints, particularly for secondary workloads such as backups, files, or on-demand workloads. However, bridging data between private data centers and the public cloud comes with a unique set of challenges. Traditional data center services rely on low-latency network attached storage (NAS) and storage area network (SAN) protocols to access storage locally. Cloud-native applications are generally optimized for API access to data in scalable and durable cloud object storage, such as Amazon Simple Storage Service (Amazon S3).&lt;/p&gt;

&lt;p&gt;A file gateway provides a simple solution for presenting one or more Amazon S3 buckets and
their objects as a mountable NFS to one or more clients on-premises.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
