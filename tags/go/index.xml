<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GO on OS/APP HARDCORE</title>
    <link>https://wubigo.com/tags/go/</link>
    <description>Recent content in GO on OS/APP HARDCORE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Aug 2018 06:26:51 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lang Go Dep Manage</title>
      <link>https://wubigo.com/post/lang-go-dep-manage/</link>
      <pubDate>Wed, 29 Aug 2018 06:26:51 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lang-go-dep-manage/</guid>
      <description>glide To upgrade dependencies, please make the necessary modifications in glide.yaml and run glide update.</description>
    </item>
    
    <item>
      <title>Go穿越Firewall</title>
      <link>https://wubigo.com/post/lang-go-firewall/</link>
      <pubDate>Thu, 22 Mar 2018 14:34:01 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lang-go-firewall/</guid>
      <description>go doc https://golang.google.cn
proxy  从 Github 的代码库 clone
go get -u github.com/golang/text mv $GOPATH/src/github.com/golang/text $GOPATH/src/golang.org/x/text go get -u github.com/golang/crypto mv $GOPATH/src/github.com/golang/crypto $GOPATH/src/golang.org/x/crypto  设置 GOPROXY 环境变量配置代理
  例如：GOPROXY=https://goproxy.io
https://github.com/northbright/Notes/blob/master/Golang/china/get-golang-packages-on-golang-org-in-china.md
https://gocn.vip/article/1678</description>
    </item>
    
    <item>
      <title>Go Module</title>
      <link>https://wubigo.com/post/lang-go-module/</link>
      <pubDate>Wed, 22 Mar 2017 15:09:20 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lang-go-module/</guid>
      <description>Modules  A module is a collection of related Go packages that are versioned together as a single unit.
Modules record precise dependency requirements and create reproducible builds.
 go.mod  A module is defined by a tree of Go source files with a go.mod file in the tree&amp;rsquo;s root directory. Module source code may be located outside of GOPATH. There are four directives: module, require, replace, exclude.</description>
    </item>
    
    <item>
      <title>GO NOTES</title>
      <link>https://wubigo.com/post/lang-go-notes/</link>
      <pubDate>Sat, 11 Feb 2017 20:24:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lang-go-notes/</guid>
      <description>Method&amp;rsquo;s receiver  go don&amp;rsquo;t user special name like( this or self ) for the receiver
func (p Point) MoveBy(factor float){ p.X += factor //-&amp;gt; this.X += factor }  Pointer receiver
  project-layout Internal app/pkg Directory Clarification Using /internal/pkg is about consistency if you use the /pkg pattern. The public shared code goes in &amp;lsquo;/pkg&amp;rsquo; and the private shared code goes in /internal/pkg
https://github.com/golang-standards/project-layout/issues/9
vendor package go help gopath find .</description>
    </item>
    
  </channel>
</rss>