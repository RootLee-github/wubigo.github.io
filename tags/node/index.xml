<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NODE on 函数计算</title>
    <link>https://wubigo.com/tags/node/</link>
    <description>Recent content in NODE on 函数计算</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Dec 2018 11:45:14 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gatsby Debug</title>
      <link>https://wubigo.com/post/gatsby-debug/</link>
      <pubDate>Thu, 13 Dec 2018 11:45:14 +0800</pubDate>
      
      <guid>https://wubigo.com/post/gatsby-debug/</guid>
      <description>Debugging the Build Process Gatsby’s build and develop steps run as a Node.js application
which you can debug using standard tools for Node.js applications.
Debugging with Node.js’ built-in console console.log(args)  VS Code Debugger (Auto-Config)  Preferences: Type node debug into the search bar. Make sure the Auto Attach option is set to on.
 launch.json
  launch.json
{ // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes.</description>
    </item>
    
    <item>
      <title>Gatsby Notes</title>
      <link>https://wubigo.com/post/gatsby-notes/</link>
      <pubDate>Mon, 03 Sep 2018 09:03:37 +0800</pubDate>
      
      <guid>https://wubigo.com/post/gatsby-notes/</guid>
      <description>bind eip gatsby develop -- --host=0.0.0.0  Prettier VS Code plugin JSX The hybrid “HTML-in-JS” is actually a syntax extension
of JavaScript, for React, called JSX
In pure JavaScript, it looks more like this:
src/pages/index.js
import React from &amp;quot;react&amp;quot; export default () =&amp;gt; React.createElement(&amp;quot;div&amp;quot;, null, &amp;quot;Hello world!&amp;quot;)  Now you can spot the use of the &amp;lsquo;react&amp;rsquo; import! But wait. You’re writing JSX, not pure HTML and
JavaScript. How does the browser read that?</description>
    </item>
    
    <item>
      <title>Nodejs Notes</title>
      <link>https://wubigo.com/post/nodejs-notes/</link>
      <pubDate>Sun, 03 Dec 2017 08:39:52 +0800</pubDate>
      
      <guid>https://wubigo.com/post/nodejs-notes/</guid>
      <description>set registry npm config set registry=http://registry.npm.taobao.org npm config ls -l userconfig = &amp;quot;C:\\Users\\Administrator\\.npmrc&amp;quot;  declare variables ES6 comes with two more options to declare your variables: const and let. In JavaScript ES6, you will
rarely find var anymore.
A variable declared with const cannot be re-assigned or re-declared. It cannot get mutated (changed,
modified)
Immutability is embraced in React and its ecosystem. That’s why const should be your default</description>
    </item>
    
  </channel>
</rss>