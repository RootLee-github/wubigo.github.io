<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDN on NgAPP</title>
    <link>https://wubigo.com/tags/sdn/</link>
    <description>Recent content in SDN on NgAPP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Feb 2018 16:56:16 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/sdn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aws EC2 MACVLAN</title>
      <link>https://wubigo.com/post/aws-ec2-macvaln/</link>
      <pubDate>Wed, 28 Feb 2018 16:56:16 +0800</pubDate>
      
      <guid>https://wubigo.com/post/aws-ec2-macvaln/</guid>
      <description>Amazon EC2 networking doesn&amp;rsquo;t allow to use private ips in the containers
through bridges or macvlan. Dedicating a network interface to a
container makes it directly unreachable from the host.
docker network create -d macvlan --subnet 172.30.80.0/20 --gateway 172.30.80.1 -o parent=eth0 pub_net docker run -d --network pub_net --ip 172.30.80.10 busybox  </description>
    </item>
    
    <item>
      <title>SR-IOV vs DPDK/VPP for NFV</title>
      <link>https://wubigo.com/post/sr-iov-vs-dpdk/</link>
      <pubDate>Tue, 30 Jan 2018 09:32:11 +0800</pubDate>
      
      <guid>https://wubigo.com/post/sr-iov-vs-dpdk/</guid>
      <description>Linux Bridge supported GRE Tunnels, but not the newer and more scalable VXLAN model https://vincent.bernat.ch/en/blog/2017-vxlan-linux
This post will talk
about the various building blocks available to speed up packet processing
both hardware based e.g.SR-IOV, RDT, QAT, VMDq, VTD
and software based e.g. DPDK, Fd.io/VPP, OVS etc and give
hands on lab experience
https://www.telcocloudbridge.com/blog/dpdk-vs-sr-iov-for-nfv-why-a-wrong-decision-can-impact-performance/</description>
    </item>
    
    <item>
      <title>Vpn With Wireguard</title>
      <link>https://wubigo.com/post/vpn-with-wireguard/</link>
      <pubDate>Tue, 02 Jan 2018 12:34:32 +0800</pubDate>
      
      <guid>https://wubigo.com/post/vpn-with-wireguard/</guid>
      <description>sudo add-apt-repository ppa:wireguard/wireguard sudo apt-get update sudo apt-get install wireguard wg genkey  /etc/wireguard/wg0.conf
[Interface] PrivateKey = SEd9KTOqekPvpxgfYB3e8f38Z8T4PX0J1DQlSRC3InQ= Address = 10.12.4.0/21 ListenPort = 51820 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE [Peer] # My laptop (this is just a comment, change it to identify the device) PublicKey = YQ3MK8oGH62d5jb/mfPVVNP955SO3lcmMOnfQ71r4mo= AllowedIPs = 10.</description>
    </item>
    
    <item>
      <title>Vpn Setup</title>
      <link>https://wubigo.com/post/vpn-setup/</link>
      <pubDate>Tue, 02 Jan 2018 06:34:20 +0800</pubDate>
      
      <guid>https://wubigo.com/post/vpn-setup/</guid>
      <description>https://github.com/Nyr/openvpn-install
https://github.com/hwdsl2/setup-ipsec-vpn
https://wireguard.isystem.io/
https://github.com/meshbird/meshbird
https://www.tinc-vpn.org/
https://github.com/isystem-io/wireguard-aws
Download and install the TunSafe, which is a Wireguard client for Windows.
 wget https://git.io/vpnsetup -O vpnsetup.sh &amp;amp;&amp;amp; sudo sh vpnsetup.sh --2020-01-01 22:26:54-- https://git.io/vpnsetup Resolving git.io (git.io)... 54.165.216.26, 54.224.175.112, 34.227.147.55, ... Connecting to git.io (git.io)|54.165.216.26|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/vpnsetup.sh [following] --2020-01-01 22:26:55-- https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/vpnsetup.sh Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.188.133 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.188.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 15318 (15K) [text/plain] Saving to: ‘vpnsetup.</description>
    </item>
    
    <item>
      <title>Linux Bridge</title>
      <link>https://wubigo.com/post/linux-bridge/</link>
      <pubDate>Fri, 28 Jul 2017 08:36:18 +0800</pubDate>
      
      <guid>https://wubigo.com/post/linux-bridge/</guid>
      <description>Some things worth noting in br_add_if:
 Only ethernet like devices can be added to bridge, as bridge is a layer 2 device. Bridges cannot be added to a bridge. New interface is set to promiscuous mode: dev_set_promiscuity(dev, 1)  https://goyalankit.com/blog/linux-bridge</description>
    </item>
    
    <item>
      <title>Aws EC2 多网卡配置</title>
      <link>https://wubigo.com/post/aws-ec2-secondary-network-interface/</link>
      <pubDate>Tue, 28 Feb 2017 16:26:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/aws-ec2-secondary-network-interface/</guid>
      <description>We can no longer assign a public IP address to your instance
The auto-assign public IP address feature for this instance is disabled because you specified multiple network interfaces. Public IPs can only be assigned to instances with one network interface. To re-enable the auto-assign public IP address feature, please specify only the eth0 network interface.
 ip MAC=`curl http://169.254.169.254/latest/meta-data/mac` curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${MAC}/local-ipv4s  配置第二块网卡 ip a | grep ^[[:digit:]] tee -a /etc/network/interfaces.</description>
    </item>
    
    <item>
      <title>Kernel Bypass Networking</title>
      <link>https://wubigo.com/post/kernel-bypass-networking/</link>
      <pubDate>Thu, 29 Dec 2016 10:15:59 +0800</pubDate>
      
      <guid>https://wubigo.com/post/kernel-bypass-networking/</guid>
      <description>RDMA (Remote Direct Memory Access), TOE (TCP Offload Engine), and OpenOnload. More recently, DPDK (Data Plane Development Kit) has been used in some applications to bypass the kernel, and then there are new emerging initiatives such as FD.io (Fast Data Input Output) based on VPP (Vector Packet Processing). More will likely emerge in the future.
Technologies like RDMA and TOE create a parallel stack in the kernel and solve the first problem (namely, the &amp;ldquo;kernel is too slow&amp;rdquo;) while OpenOnload, DPDK and FD.</description>
    </item>
    
  </channel>
</rss>